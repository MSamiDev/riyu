datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  appointments      Appointment[]
  blogs             Blog[]
  createdAt         DateTime           @default(now())
  email             String             @unique
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  password          String
  role              Json               @default(CLIENT)
  updatedAt         DateTime           @updatedAt
  userSubscriptions UserSubscription[]
}

model Appointment {
  createdAt DateTime              @default(now())
  date      DateTime
  id        String                @id @default(auto()) @map("_id") @db.ObjectId
  status    EnumAppointmentStatus @default(BOOKED)
  time      String
  updatedAt DateTime              @updatedAt
  user      User                  @relation(fields: [userId], references: [id])
  userId    String                @db.ObjectId
}

model Subscription {
  appointmentsAllowed Int
  createdAt           DateTime           @default(now())
  details             String?
  duration            String
  id                  String             @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  price               Float
  updatedAt           DateTime           @updatedAt
  userSubscriptions   UserSubscription[]
}

model UserSubscription {
  appointmentsLeft Int
  createdAt        DateTime     @default(now())
  endDate          DateTime
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  startDate        DateTime
  subscription     Subscription @relation(fields: [subscriptionId], references: [id])
  subscriptionId   String       @db.ObjectId
  updatedAt        DateTime     @updatedAt
  user             User         @relation(fields: [userId], references: [id])
  userId           String       @db.ObjectId
}

model Blog {
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  tags      String
  title     String
  updatedAt DateTime @updatedAt
}

enum EnumAppointmentStatus {
  BOOKED
  COMPLETED
  CANCELED
}
